{"version":3,"sources":["utils/generatedKLineDataList.js","Layout.jsx","chart/ChartTypeKLineChart.jsx","chart/TechnicalIndicatorKLineChart.jsx","chart/CustomThemeKLineChart.jsx","chart/LanguageKLineChart.jsx","chart/TooltipKLineChart.jsx","chart/TimezoneKLineChart.jsx","chart/DrawShapeKLineChart.jsx","chart/CustomCandleMarkKLineChart.jsx","chart/LoadMoreKLineChart.jsx","chart/UpdateKLineChart.jsx","App.jsx","serviceWorker.js","index.js"],"names":["baseTimestamp","Date","now","basePrice","dataSize","dataList","timestamp","Math","floor","baseValue","prices","i","random","j","sort","openIdx","round","toFixed","closeIdx","volume","kLineModel","open","low","high","close","turnover","unshift","Layout","title","children","className","types","key","text","ChartTypeKLineChart","chart","useRef","useEffect","current","init","applyNewData","generatedKLineDataList","dispose","id","map","onClick","_","setStyleOptions","candle","type","fruits","emojiTechnicalIndicator","name","plots","calcTechnicalIndicator","kLineDataList","result","forEach","kLineData","push","emoji","render","ctx","dataSource","viewport","xAxis","yAxis","font","barSpace","textAlign","from","to","data","technicalIndicatorDataList","x","convertToPixel","y","fillText","mainTechnicalIndicatorTypes","subTechnicalIndicatorTypes","TechnicalIndicatorKLineChart","paneId","addTechnicalIndicatorTemplate","createTechnicalIndicator","style","paddingRight","paddingLeft","themes","CustomThemeKLineChart","useState","theme","setTheme","textColor","gridColor","axisLineColor","crossLineColor","crossTextBackgroundColor","grid","horizontal","color","vertical","priceMark","tooltip","technicalIndicator","axisLine","tickLine","tickText","separator","crosshair","line","backgroundColor","getThemeOptions","locals","LanguageKLineChart","language","setLanguage","labels","getLanguageOptions","rules","TooltipKLineChart","candleShowType","setCandleShowType","candleShowRule","setCandleShowRule","technicalIndicatorShowRule","setTechnicalIndicatorShowRule","height","showType","showRule","values","change","value","getTooltipOptions","timezones","TimezoneKLineChart","setTimezone","rect","totalStep","checkEventCoordinateOnShape","eventCoordinate","checkCoordinateOnSegment","createShapeDataSource","coordinates","length","isDraw","isCheck","styles","circle","xDis","abs","yDis","r","sqrt","radius","startAngle","endAngle","PI","drawLines","DrawGraphMarkKLineChart","addShapeTemplate","createShape","removeShape","CustomCandleMarkKLineChart","annotationDrawExtend","coordinate","fillStyle","strokeStyle","textWidth","measureText","width","startX","startY","beginPath","moveTo","lineTo","closePath","fill","rectX","rectY","rectWidth","arcTo","textBaseline","kLineChart","createAnnotation","point","drawExtend","params","symbol","isActive","price","position","offset","LoadMoreKLineChart","loadMore","console","log","setTimeout","firstData","getDataList","applyMoreData","UpdateKLineChart","updateData","lastData","newData","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.246bf26f.chunk.js","sourcesContent":["export default function (baseTimestamp = Date.now(), basePrice = 5000, dataSize = 800) {\n  const dataList = []\n  let timestamp = Math.floor(baseTimestamp / 60 / 1000) * 60 * 1000\n  let baseValue = basePrice\n  const prices = []\n  for (let i = 0; i < dataSize; i++) {\n    baseValue = baseValue + Math.random() * 20 - 10\n    for (let j = 0; j < 4; j++) {\n      prices[j] = (Math.random() - 0.5) * 12 + baseValue\n    }\n    prices.sort()\n    const openIdx = +Math.round(Math.random() * 3).toFixed(0)\n    let closeIdx = +Math.round(Math.random() * 2).toFixed(0)\n    if (closeIdx === openIdx) {\n      closeIdx++\n    }\n    const volume = Math.random() * 50 + 10\n    const kLineModel = {\n      open: prices[openIdx],\n      low: prices[0],\n      high: prices[3],\n      close: prices[closeIdx],\n      volume: volume,\n      timestamp\n    }\n    timestamp -= 60 * 1000\n    kLineModel.turnover = (kLineModel.open + kLineModel.close + kLineModel.high + kLineModel.low) / 4 * volume\n    dataList.unshift(kLineModel)\n  }\n  return dataList\n}\n","import React from 'react'\n\nexport default function Layout ({ title, children }) {\n  return (\n    <div\n      className=\"k-line-chart-container\">\n      <h3\n        className=\"k-line-chart-title\">{title}</h3>\n      {children}\n    </div>\n  )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { init, dispose } from 'klinecharts'\nimport generatedKLineDataList from '../utils/generatedKLineDataList'\nimport Layout from '../Layout'\n\nconst types = [\n  { key: 'candle_solid', text: '蜡烛实心' },\n  { key: 'candle_stroke', text: '蜡烛空心' },\n  { key: 'candle_up_stroke', text: '蜡烛涨空心' },\n  { key: 'candle_down_stroke', text: '蜡烛跌空心' },\n  { key: 'ohlc', text: 'OHLC' },\n  { key: 'area', text: '面积图' }\n]\n\nexport default function ChartTypeKLineChart () {\n  const chart = useRef()\n\n  useEffect(() => {\n    chart.current = init('real-time-k-line')\n    chart.current.applyNewData(generatedKLineDataList())\n    return () => {\n      dispose('real-time-k-line')\n    }\n  }, [])\n\n  return (\n    <Layout\n      title=\"图表类型\">\n      <div id=\"real-time-k-line\" className=\"k-line-chart\"/>\n      <div\n        className=\"k-line-chart-menu-container\">\n        {\n          types.map(({ key, text }) => {\n            return (\n              <button\n                key={key}\n                onClick={_ => {\n                  chart.current && chart.current.setStyleOptions({\n                    candle: {\n                      type: key\n                    }\n                  })\n                }}>\n                {text}\n              </button>\n            )\n          })\n        }\n      </div>\n    </Layout>\n  )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { init, dispose } from 'klinecharts'\nimport generatedKLineDataList from '../utils/generatedKLineDataList'\nimport Layout from '../Layout'\n\nconst fruits = [\n  '🍏', '🍎', '🍐', '🍊', '🍋', '🍌',\n  '🍉', '🍇', '🍓', '🍈', '🍒', '🍑',\n  '🍍', '🥥', '🥝', '🥭', '🥑', '🍏'\n]\n\n// 自定义指标\nconst emojiTechnicalIndicator = {\n  name: 'EMOJI',\n  plots: [\n    { key: 'emoji' }\n  ],\n  calcTechnicalIndicator: (kLineDataList) => {\n    const result = []\n    kLineDataList.forEach(kLineData => {\n      result.push({ emoji: kLineData.close, text: fruits[Math.floor(Math.random() * 17)] })\n    })\n    return result\n  },\n  render: ({\n    ctx,\n    dataSource,\n    viewport,\n    xAxis,\n    yAxis\n  }) => {\n    ctx.font = `${viewport.barSpace}px Helvetica Neue`\n    ctx.textAlign = 'center'\n    for (let i = dataSource.from; i < dataSource.to; i++) {\n      const data = dataSource.technicalIndicatorDataList[i]\n      const x = xAxis.convertToPixel(i)\n      const y = yAxis.convertToPixel(data.emoji)\n      ctx.fillText(data.text, x, y)\n    }\n  }\n}\n\nconst mainTechnicalIndicatorTypes = ['MA', 'EMA', 'SAR']\nconst subTechnicalIndicatorTypes = ['VOL', 'MACD', 'KDJ']\n\nexport default function TechnicalIndicatorKLineChart () {\n  const chart = useRef()\n  const paneId = useRef()\n  useEffect(() => {\n    chart.current = init('technical-indicator-k-line')\n    // 将自定义技术指标添加到图表\n    chart.current.addTechnicalIndicatorTemplate(emojiTechnicalIndicator)\n    paneId.current = chart.current.createTechnicalIndicator('VOL', false)\n    chart.current.applyNewData(generatedKLineDataList())\n    return () => {\n      dispose('technical-indicator-k-line')\n    }\n  }, [])\n  return (\n    <Layout\n      title=\"技术指标\">\n      <div id=\"technical-indicator-k-line\" className=\"k-line-chart\"/>\n      <div\n        className=\"k-line-chart-menu-container\">\n        <span style={{ paddingRight: 10 }}>主图指标</span>\n        {\n          mainTechnicalIndicatorTypes.map(type => {\n            return (\n              <button\n                key={type}\n                onClick={_ => {\n                  chart.current && chart.current.createTechnicalIndicator(type, false, { id: 'candle_pane' })\n                }}>\n                {type}\n              </button>\n            )\n          })\n        }\n        <button\n          onClick={_ => {\n            chart.current && chart.current.createTechnicalIndicator('EMOJI', true, { id: 'candle_pane' })\n          }}>\n          自定义\n        </button>\n        <span style={{ paddingRight: 10, paddingLeft: 12 }}>副图指标</span>\n        {\n          subTechnicalIndicatorTypes.map(type => {\n            return (\n              <button\n                key={type}\n                onClick={_ => {\n                  chart.current && chart.current.createTechnicalIndicator(type, false, { id: paneId.current })\n                }}>\n                {type}\n              </button>\n            )\n          })\n        }\n        <button\n          onClick={_ => {\n            chart.current && chart.current.createTechnicalIndicator('EMOJI', false, { id: paneId.current })\n          }}>\n          自定义\n        </button>\n      </div>\n    </Layout>\n  )\n}\n","import React, { useEffect, useState, useRef } from 'react'\nimport { init, dispose } from 'klinecharts'\nimport generatedKLineDataList from '../utils/generatedKLineDataList'\nimport Layout from '../Layout'\n\nconst textColorDark = '#929AA5'\nconst gridColorDark = '#292929'\nconst axisLineColorDark = '#333333'\nconst crossTextBackgroundColorDark = '#373a40'\n\nconst textColorLight = '#76808F'\nconst gridColorLight = '#ededed'\nconst axisLineColorLight = '#DDDDDD'\nconst crossTextBackgroundColorLight = '#686d76'\n\nfunction getThemeOptions (theme) {\n  const textColor = theme === 'dark' ? textColorDark : textColorLight\n  const gridColor = theme === 'dark' ? gridColorDark : gridColorLight\n  const axisLineColor = theme === 'dark' ? axisLineColorDark : axisLineColorLight\n  const crossLineColor = theme === 'dark' ? axisLineColorDark : axisLineColorLight\n  const crossTextBackgroundColor = theme === 'dark' ? crossTextBackgroundColorDark : crossTextBackgroundColorLight\n  return {\n    grid: {\n      horizontal: {\n        color: gridColor\n      },\n      vertical: {\n        color: gridColor\n      }\n    },\n    candle: {\n      priceMark: {\n        high: {\n          color: textColor\n        },\n        low: {\n          color: textColor\n        }\n      },\n      tooltip: {\n        text: {\n          color: textColor\n        }\n      }\n    },\n    technicalIndicator: {\n      tooltip: {\n        text: {\n          color: textColor\n        }\n      }\n    },\n    xAxis: {\n      axisLine: {\n        color: axisLineColor\n      },\n      tickLine: {\n        color: axisLineColor\n      },\n      tickText: {\n        color: textColor\n      }\n    },\n    yAxis: {\n      axisLine: {\n        color: axisLineColor\n      },\n      tickLine: {\n        color: axisLineColor\n      },\n      tickText: {\n        color: textColor\n      }\n    },\n    separator: {\n      color: axisLineColor\n    },\n    crosshair: {\n      horizontal: {\n        line: {\n          color: crossLineColor\n        },\n        text: {\n          backgroundColor: crossTextBackgroundColor\n        }\n      },\n      vertical: {\n        line: {\n          color: crossLineColor\n        },\n        text: {\n          backgroundColor: crossTextBackgroundColor\n        }\n      }\n    }\n  }\n}\n\nconst themes = [\n  { key: 'dark', text: '深色' },\n  { key: 'light', text: '浅色' }\n]\n\nexport default function CustomThemeKLineChart () {\n  const chart = useRef()\n  const [theme, setTheme] = useState('light')\n\n  useEffect(() => {\n    chart.current = init('custom-style-k-line')\n    chart.current.applyNewData(generatedKLineDataList())\n    return () => {\n      dispose('custom-style-k-line')\n    }\n  }, [])\n\n  useEffect(() => {\n    chart.current.setStyleOptions(getThemeOptions(theme))\n  }, [theme])\n\n  return (\n    <Layout\n      title=\"自定义主题\">\n      <div\n        id=\"custom-style-k-line\"\n        style={theme === 'dark' ? { backgroundColor: '#1f2126' } : {}}\n        className=\"k-line-chart\"/>\n      <div\n        className=\"k-line-chart-menu-container\">\n        {\n          themes.map(({ key, text }) => {\n            return (\n              <button\n                key={key}\n                onClick={_ => { setTheme(key) }}>\n                {text}\n              </button>\n            )\n          })\n        }\n      </div>\n    </Layout>\n  )\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport { init, dispose } from 'klinecharts'\nimport generatedKLineDataList from '../utils/generatedKLineDataList'\nimport Layout from '../Layout'\n\nfunction getLanguageOptions (language) {\n  return {\n    candle: {\n      tooltip: {\n        labels: language === 'zh-CN'\n          ? ['时间：', '开：', '收：', '高：', '低：', '成交量：']\n          : language === 'zh-HK'\n            ? ['時間：', '開：', '收：', '高：', '低：', '成交量：']\n            : ['T: ', 'O: ', 'C: ', 'H: ', 'L: ', 'V: ']\n      }\n    }\n  }\n}\n\nconst locals = [\n  { key: 'zh-CN', text: '简体中文' },\n  { key: 'zh-HK', text: '繁体中文' },\n  { key: 'en-US', text: 'English' }\n]\n\nexport default function LanguageKLineChart () {\n  const chart = useRef()\n  const [language, setLanguage] = useState('zh-CN')\n\n  useEffect(() => {\n    chart.current = init('language-k-line')\n    chart.current.applyNewData(generatedKLineDataList())\n    return () => { dispose('language-k-line') }\n  }, [])\n\n  useEffect(() => {\n    chart.current && chart.current.setStyleOptions(getLanguageOptions(language))\n  }, [language])\n\n  return (\n    <Layout\n      title=\"多语言\">\n      <div id=\"language-k-line\" className=\"k-line-chart\"/>\n      <div\n        className=\"k-line-chart-menu-container\">\n        {\n          locals.map(({ key, text }) => {\n            return (\n              <button\n                key={key}\n                onClick={_ => { setLanguage(key) }}>\n                {text}\n              </button>\n            )\n          })\n        }\n      </div>\n    </Layout>\n  )\n}\n","import React, { useRef, useState, useEffect } from 'react'\nimport { init, dispose } from 'klinecharts'\nimport generatedKLineDataList from '../utils/generatedKLineDataList'\nimport Layout from '../Layout'\n\nfunction getTooltipOptions (candleShowType, candleShowRule, technicalIndicatorShowRule) {\n  return {\n    candle: {\n      tooltip: {\n        showType: candleShowType,\n        showRule: candleShowRule,\n        labels: ['开盘价：', '收盘价：', '涨跌幅：'],\n        values: kLineData => {\n          const change = (kLineData.close - kLineData.open) / kLineData.open * 100\n          return [\n            { value: kLineData.open.toFixed(2) },\n            { value: kLineData.close.toFixed(2) },\n            {\n              value: `${change.toFixed(2)}%`,\n              color: change < 0 ? '#EF5350' : '#26A69A'\n            }\n          ]\n        }\n      }\n    },\n    technicalIndicator: {\n      tooltip: {\n        showRule: technicalIndicatorShowRule\n      }\n    }\n  }\n}\n\nconst rules = [\n  { key: 'always', text: '总是显示' },\n  { key: 'follow_cross', text: '跟随十字光标' },\n  { key: 'none', text: '不显示' }\n]\n\nexport default function TooltipKLineChart () {\n  const chart = useRef()\n  const [candleShowType, setCandleShowType] = useState('standard')\n  const [candleShowRule, setCandleShowRule] = useState('always')\n  const [technicalIndicatorShowRule, setTechnicalIndicatorShowRule] = useState('always')\n\n  useEffect(() => {\n    chart.current = init('tooltip-k-line')\n    chart.current.createTechnicalIndicator('MA', false, { id: 'candle_pane' })\n    chart.current.createTechnicalIndicator('KDJ', false, { height: 80 })\n    chart.current.applyNewData(generatedKLineDataList())\n    return () => { dispose('tooltip-k-line') }\n  }, [])\n\n  useEffect(() => {\n    chart.current && chart.current.setStyleOptions(getTooltipOptions(\n      candleShowType, candleShowRule, technicalIndicatorShowRule\n    ))\n  }, [candleShowType, candleShowRule, technicalIndicatorShowRule])\n\n  return (\n    <Layout\n      title=\"十字光标文字提示\">\n      <div id=\"tooltip-k-line\" className=\"k-line-chart\"/>\n      <div\n        className=\"k-line-chart-menu-container\">\n        <span style={{ paddingRight: 10 }}>主图显示类型</span>\n        <button\n          onClick={_ => { setCandleShowType('standard') }}>\n          默认\n        </button>\n        <button\n          onClick={_ => { setCandleShowType('rect') }}>\n          矩形框\n        </button>\n      </div>\n      <div\n        className=\"k-line-chart-menu-container\">\n        <span style={{ paddingRight: 10 }}>k线提示显示规则</span>\n        {\n          rules.map(({ key, text }) => {\n            return (\n              <button\n                key={key}\n                onClick={_ => { setCandleShowRule(key) }}>\n                {text}\n              </button>\n            )\n          })\n        }\n      </div>\n      <div\n        className=\"k-line-chart-menu-container\">\n        <span style={{ paddingRight: 10 }}>指标提示显示规则</span>\n        {\n          rules.map(({ key, text }) => {\n            return (\n              <button\n                key={key}\n                onClick={_ => { setTechnicalIndicatorShowRule(key) }}>\n                {text}\n              </button>\n            )\n          })\n        }\n      </div>\n    </Layout>\n  )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { init, dispose } from 'klinecharts'\nimport generatedKLineDataList from '../utils/generatedKLineDataList'\nimport Layout from '../Layout'\n\nconst timezones = [\n  { key: 'Asia/Shanghai', text: '上海' },\n  { key: 'Europe/Berlin', text: '柏林' },\n  { key: 'America/Chicago', text: '芝加哥' }\n]\n\nexport default function TimezoneKLineChart () {\n  const chart = useRef()\n  useEffect(() => {\n    chart.current = init('timezone-k-line')\n    chart.current.applyNewData(generatedKLineDataList())\n    return () => {\n      dispose('timezone-k-line')\n    }\n  }, [])\n\n  return (\n    <Layout\n      title=\"时区设置\">\n      <div\n        id=\"timezone-k-line\" className=\"k-line-chart\"/>\n      <div\n        className=\"k-line-chart-menu-container\">\n        {\n          timezones.map(({ key, text }) => {\n            return (\n              <button\n                key={key}\n                onClick={_ => {\n                  chart.current && chart.current.setTimezone(key)\n                }}>\n                {text}\n              </button>\n            )\n          })\n        }\n      </div>\n    </Layout>\n  )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { init, dispose } from 'klinecharts'\nimport { checkCoordinateOnSegment } from 'klinecharts/lib/shape/shapeHelper'\nimport generatedKLineDataList from '../utils/generatedKLineDataList'\nimport Layout from '../Layout'\n\nconst rect = {\n  name: 'rect',\n  totalStep: 3,\n  checkEventCoordinateOnShape: ({ dataSource, eventCoordinate }) => {\n    return checkCoordinateOnSegment(dataSource[0], dataSource[1], eventCoordinate)\n  },\n  createShapeDataSource: ({ coordinates }) => {\n    if (coordinates.length === 2) {\n      return [\n        {\n          type: 'line',\n          isDraw: false,\n          isCheck: true,\n          dataSource: [\n            [{ ...coordinates[0] }, { x: coordinates[1].x, y: coordinates[0].y }],\n            [{ x: coordinates[1].x, y: coordinates[0].y }, { ...coordinates[1] }],\n            [{ ...coordinates[1] }, { x: coordinates[0].x, y: coordinates[1].y }],\n            [{ x: coordinates[0].x, y: coordinates[1].y }, { ...coordinates[0] }]\n          ]\n        },\n        {\n          type: 'polygon',\n          isDraw: true,\n          isCheck: false,\n          styles: { style: 'fill' },\n          dataSource: [[\n            { ...coordinates[0] },\n            { x: coordinates[1].x, y: coordinates[0].y },\n            { ...coordinates[1] },\n            { x: coordinates[0].x, y: coordinates[1].y }\n          ]]\n        },\n        {\n          type: 'polygon',\n          isDraw: true,\n          isCheck: false,\n          dataSource: [[\n            { ...coordinates[0] },\n            { x: coordinates[1].x, y: coordinates[0].y },\n            { ...coordinates[1] },\n            { x: coordinates[0].x, y: coordinates[1].y }\n          ]]\n        }\n      ]\n    }\n    return []\n  }\n}\n\nconst circle = {\n  name: 'circle',\n  totalStep: 3,\n  checkEventCoordinateOnShape: ({ dataSource, eventCoordinate }) => {\n    const xDis = Math.abs(dataSource.x - eventCoordinate.x)\n    const yDis = Math.abs(dataSource.y - eventCoordinate.y)\n    const r = Math.sqrt(xDis * xDis + yDis * yDis)\n    return Math.abs(r - dataSource.radius) < 3\n  },\n  createShapeDataSource: ({ coordinates }) => {\n    if (coordinates.length === 2) {\n      const xDis = Math.abs(coordinates[0].x - coordinates[1].x)\n      const yDis = Math.abs(coordinates[0].y - coordinates[1].y)\n      const radius = Math.sqrt(xDis * xDis + yDis * yDis)\n      return [\n        {\n          type: 'arc',\n          isDraw: true,\n          isCheck: false,\n          styles: { style: 'fill' },\n          dataSource: [\n            { ...coordinates[0], radius, startAngle: 0, endAngle: Math.PI * 2 }\n          ]\n        },\n        {\n          type: 'arc',\n          isDraw: true,\n          isCheck: true,\n          dataSource: [\n            { ...coordinates[0], radius, startAngle: 0, endAngle: Math.PI * 2 }\n          ]\n        }\n      ]\n    }\n    return []\n  }\n}\n\nconst drawLines = [\n  { key: 'priceLine', text: '价格线' },\n  { key: 'priceChannelLine', text: '价格通道线' },\n  { key: 'parallelStraightLine', text: '平行直线' },\n  { key: 'fibonacciLine', text: '斐波那契回调' },\n  { key: 'rect', text: '自定义矩形' },\n  { key: 'circle', text: '自定义圆' }\n]\n\nexport default function DrawGraphMarkKLineChart () {\n  const chart = useRef()\n  useEffect(() => {\n    chart.current = init('draw-shape-k-line')\n    chart.current.addShapeTemplate([rect, circle])\n    chart.current.applyNewData(generatedKLineDataList())\n    return () => {\n      dispose('draw-shape-k-line')\n    }\n  }, [])\n\n  return (\n    <Layout\n      title=\"绘图\">\n      <div\n        id=\"draw-shape-k-line\" className=\"k-line-chart\"/>\n      <div\n        className=\"k-line-chart-menu-container\">\n        {\n          drawLines.map(({ key, text }) => {\n            return (\n              <button\n                key={key}\n                onClick={_ => {\n                  chart.current && chart.current.createShape(key)\n                }}>\n                {text}\n              </button>\n            )\n          })\n        }\n        <button\n          onClick={() => {\n            chart.current && chart.current.removeShape()\n          }}>\n          清除\n        </button>\n      </div>\n    </Layout>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { init, dispose } from 'klinecharts'\nimport generatedKLineDataList from '../utils/generatedKLineDataList'\nimport Layout from '../Layout'\n\nexport default function CustomCandleMarkKLineChart () {\n  function annotationDrawExtend (ctx, coordinate, text) {\n    ctx.font = '12px Roboto'\n    ctx.fillStyle = '#2d6187'\n    ctx.strokeStyle = '#2d6187'\n\n    const textWidth = ctx.measureText(text).width\n    const startX = coordinate.x\n    let startY = coordinate.y + 6\n    ctx.beginPath()\n    ctx.moveTo(startX, startY)\n    startY += 5\n    ctx.lineTo(startX - 4, startY)\n    ctx.lineTo(startX + 4, startY)\n    ctx.closePath()\n    ctx.fill()\n\n    const rectX = startX - textWidth / 2 - 6\n    const rectY = startY\n    const rectWidth = textWidth + 12\n    const rectHeight = 28\n    const r = 2\n    ctx.beginPath()\n    ctx.moveTo(rectX + r, rectY)\n    ctx.arcTo(rectX + rectWidth, rectY, rectX + rectWidth, rectY + rectHeight, r)\n    ctx.arcTo(rectX + rectWidth, rectY + rectHeight, rectX, rectY + rectHeight, r)\n    ctx.arcTo(rectX, rectY + rectHeight, rectX, rectY, r)\n    ctx.arcTo(rectX, rectY, rectX + rectWidth, rectY, r)\n    ctx.closePath()\n    ctx.fill()\n\n    ctx.fillStyle = '#fff'\n    ctx.textBaseline = 'middle'\n    ctx.textAlign = 'center'\n    ctx.fillText(text, startX, startY + 14)\n  }\n\n  useEffect(() => {\n    const kLineChart = init('custom-candle-mark-k-line')\n    const kLineDataList = generatedKLineDataList()\n    kLineChart.applyNewData(kLineDataList)\n    kLineChart.createAnnotation([\n      {\n        point: { timestamp: kLineDataList[kLineDataList.length - 10].timestamp },\n        drawExtend: (params) => {\n          const { ctx, coordinate } = params\n          annotationDrawExtend(ctx, coordinate, '这是一个固定显示标记')\n        }\n      }, {\n        point: { timestamp: kLineDataList[kLineDataList.length - 20].timestamp },\n        styles: {\n          symbol: {\n            type: 'circle'\n          }\n        }\n      }, {\n        point: { timestamp: kLineDataList[kLineDataList.length - 22].timestamp },\n        styles: {\n          symbol: {\n            type: 'rect'\n          }\n        }\n      }, {\n        point: { timestamp: kLineDataList[kLineDataList.length - 40].timestamp },\n        drawExtend: (params) => {\n          const { ctx, coordinate, isActive } = params\n          if (isActive) {\n            annotationDrawExtend(ctx, coordinate, '这是一个鼠标移入显示标记')\n          }\n        }\n      }, {\n        point: { timestamp: kLineDataList[kLineDataList.length - 46].timestamp },\n        styles: {\n          symbol: {\n            type: 'triangle'\n          }\n        }\n      }, {\n        point: {\n          timestamp: kLineDataList[kLineDataList.length - 45].timestamp, price: kLineDataList[kLineDataList.length - 45].high\n        },\n        styles: {\n          symbol: {\n            position: 'point',\n            offset: [0, -30]\n          }\n        }\n      }\n    ])\n    return () => {\n      dispose('custom-candle-mark-k-line')\n    }\n  }, [])\n  return (\n    <Layout\n      title=\"自定义蜡烛图标记\">\n      <div id=\"custom-candle-mark-k-line\" className=\"k-line-chart\"/>\n    </Layout>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { init, dispose } from 'klinecharts'\nimport generatedKLineDataList from '../utils/generatedKLineDataList'\nimport Layout from '../Layout'\n\nexport default function LoadMoreKLineChart () {\n  useEffect(() => {\n    const kLineChart = init('load-more-k-line')\n    kLineChart.applyNewData(generatedKLineDataList(Date.now(), 5000, 200), true)\n    kLineChart.loadMore(timestamp => {\n      console.log(timestamp)\n      setTimeout(() => {\n        const firstData = kLineChart.getDataList()[0]\n        kLineChart.applyMoreData(generatedKLineDataList(timestamp, firstData.close, 100), true)\n      }, 2000)\n    })\n    return () => {\n      dispose('load-more-k-line')\n    }\n  }, [])\n  return (\n    <Layout\n      title=\"加载历史数据\">\n      <div id=\"load-more-k-line\" className=\"k-line-chart\"/>\n    </Layout>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { init, dispose } from 'klinecharts'\nimport generatedKLineDataList from '../utils/generatedKLineDataList'\nimport Layout from '../Layout'\n\nexport default function UpdateKLineChart () {\n  function updateData (kLineChart) {\n    setTimeout(() => {\n      if (kLineChart) {\n        const dataList = kLineChart.getDataList()\n        const lastData = dataList[dataList.length - 1]\n        const newData = generatedKLineDataList(lastData.timestamp, lastData.close, 1)[0]\n        newData.timestamp += 1000 * 60\n        kLineChart.updateData(newData)\n      }\n      updateData(kLineChart)\n    }, 1000)\n  }\n\n  useEffect(() => {\n    const kLineChart = init('update-k-line')\n    kLineChart.applyNewData(generatedKLineDataList())\n    updateData(kLineChart)\n    return () => {\n      dispose('update-k-line')\n    }\n  }, [])\n  return (\n    <Layout\n      title=\"实时更新\">\n      <div id=\"update-k-line\" className=\"k-line-chart\"/>\n    </Layout>\n  )\n}\n","import React from 'react'\nimport ChartTypeKLineChart from './chart/ChartTypeKLineChart'\nimport TechnicalIndicatorKLineChart from './chart/TechnicalIndicatorKLineChart'\nimport CustomThemeKLineChart from './chart/CustomThemeKLineChart'\nimport LanguageKLineChart from './chart/LanguageKLineChart'\nimport TooltipKLineChart from './chart/TooltipKLineChart'\nimport TimezoneKLineChart from './chart/TimezoneKLineChart'\nimport DrawShapeKLineChart from './chart/DrawShapeKLineChart'\nimport CustomCandleMarkKLineChart from './chart/CustomCandleMarkKLineChart'\nimport LoadMoreKLineChart from './chart/LoadMoreKLineChart'\nimport UpdateKLineChart from './chart/UpdateKLineChart'\n\nimport './app.less'\n\nexport default function App () {\n  return (\n    <div\n      className=\"app\">\n      <ChartTypeKLineChart/>\n      <TechnicalIndicatorKLineChart/>\n      <CustomThemeKLineChart/>\n      <LanguageKLineChart/>\n      <TooltipKLineChart/>\n      <TimezoneKLineChart/>\n      <DrawShapeKLineChart/>\n      <CustomCandleMarkKLineChart/>\n      <LoadMoreKLineChart/>\n      <UpdateKLineChart/>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport './index.less'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}